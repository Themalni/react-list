{"version":3,"sources":["components/Container/Container.js","dispatcher.js","components/TaskCreator/TaskCreator.js","actions/TaskActions.js","actions/Types.js","components/Task/Task.js","store/TasksStore.js","components/List/List.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","state","className","this","children","Component","Dispatcher","TaskCreator","onChange","e","setState","text","target","value","addNewTask","task","newTask","id","Math","floor","random","dispatcher","dispatch","type","placeholder","name","onKeyPress","event","key","onClick","bind","Task","tasksStore","handleActions","action","addTask","deleteTask","localTasks","localStorage","getItem","length","JSON","parse","push","setItem","stringify","emit","localTaskIndex","findIndex","taskId","splice","EventEmitter","register","List","tasks","TasksStore","getAllTasks","on","TasksComponents","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d71e55.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Container.css';\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"container-header\">Just a List</h1>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container;","import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher();","import React, { Component } from 'react';\r\nimport './TaskCreator.css';\r\nimport { addTask } from '../../actions/TaskActions';\r\n\r\nclass TaskCreator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: ''\r\n        };\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ text: e.target.value });\r\n    }\r\n\r\n    addNewTask = () => {\r\n        let newTask = {\r\n            id: Math.floor(Math.random() * 100),\r\n            text: this.state.text\r\n        };\r\n\r\n        addTask(newTask);\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"task-creator-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter task name\"\r\n                    name=\"task\"\r\n                    className=\"form-input\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.text}\r\n                    onKeyPress={event => event.key === 'Enter' && this.addNewTask()}\r\n                />\r\n                <button className=\"form-button\" onClick={this.addNewTask.bind(this)}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskCreator;","import { ADD_TASK, DELETE_TASK } from \"./Types\";\r\nimport dispatcher from \"../dispatcher\";\r\n\r\nexport function addTask(task) {\r\n    dispatcher.dispatch({\r\n        type: ADD_TASK,\r\n        task\r\n    })\r\n}\r\n\r\nexport function deleteTask(id) {\r\n    dispatcher.dispatch({\r\n        type: DELETE_TASK,\r\n        id\r\n    })\r\n}","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';","import React, { Component } from 'react';\r\nimport './Task.css';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTask } from '../../actions/TaskActions';\r\n\r\nclass Task extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        };\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"task\">\r\n                <span>{this.props.task.text}</span>\r\n                <button className=\"btn-delete\" onClick={() => deleteTask(this.props.task.id)}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTask.propTypes = {\r\n    task: PropTypes.object\r\n}\r\n\r\nexport default Task;","import { EventEmitter } from \"events\";\r\nimport dispatcher from \"../dispatcher\";\r\n\r\nclass TasksStore extends EventEmitter {\r\n\r\n    getAllTasks() {\r\n        const localTasks = localStorage.getItem(\"tasks\") || [];\r\n        return localTasks.length > 0 ? JSON.parse(localTasks) : localTasks;\r\n    }\r\n\r\n    addTask(task) {\r\n        const localTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n        localTasks.push(task);\r\n        localStorage.setItem(\"tasks\", JSON.stringify(localTasks));\r\n\r\n        this.emit(\"change\");\r\n    }\r\n\r\n    deleteTask(id) {\r\n        const localTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n        const localTaskIndex = localTasks.findIndex(taskId => taskId.id === id);\r\n        localTasks.splice(localTaskIndex, 1);\r\n        localStorage.setItem(\"tasks\", JSON.stringify(localTasks));\r\n\r\n        this.emit(\"change\");\r\n    }\r\n\r\n    handleActions = (action) => {\r\n        switch(action.type) {\r\n            case \"ADD_TASK\": {\r\n                this.addTask(action.task);\r\n                break;\r\n            }\r\n            case \"DELETE_TASK\": {\r\n                this.deleteTask(action.id);\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n}\r\n\r\nconst tasksStore = new TasksStore();\r\ndispatcher.register(tasksStore.handleActions.bind(tasksStore));\r\n\r\nexport default tasksStore;","import React, { Component } from 'react';\r\nimport './List.css';\r\nimport Task from '../Task/Task';\r\nimport TasksStore from '../../store/TasksStore';\r\n\r\nclass List extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tasks: TasksStore.getAllTasks()\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        TasksStore.on(\"change\", () => {\r\n            this.setState({\r\n                tasks: TasksStore.getAllTasks()\r\n            })\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        const TasksComponents = this.state.tasks.map((task) => {\r\n            return <Task key={task.id}  task={task} />\r\n        })\r\n\r\n        return (\r\n            <div className=\"list\">\r\n                {TasksComponents}\r\n                {this.state.tasks.length === 0 ? <span className=\"message\">Your have no tasks</span> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container/Container';\nimport TaskCreator from './components/TaskCreator/TaskCreator';\nimport List from './components/List/List';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n  render() {\n    return (\n      <Container>\n        <TaskCreator />\n        <List />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}